<div class="container mt-4">
  <h1 class="mb-4">Athletes Dashboard</h1>

  <!-- Filters -->
  <div class="row mb-3">
    <div class="col-md-4">
      <label for="ageCategoryFilter">Age Category:</label>
      <select id="ageCategoryFilter" class="form-control">
        <option value="">All</option>
        <% ageCategories.forEach(cat => { %>
          <option value="<%= cat.id %>"><%= cat.name %></option>
        <% }) %>
      </select>
    </div>
    <div class="col-md-4">
      <label for="tournamentFilter">Tournament:</label>
      <select id="tournamentFilter" class="form-control">
        <option value="">All</option>
        <!-- This will be populated dynamically from athlete tournaments -->
      </select>
    </div>
    <div class="col-md-4 d-flex align-items-end">
      <div class="form-check">
        <input type="checkbox" id="withResultsOnly" class="form-check-input">
        <label for="withResultsOnly" class="form-check-label">Only athletes with results</label>
      </div>
    </div>
  </div>

  <!-- Table -->
  <div class="table-responsive">
    <table class="table table-striped table-bordered" id="athletesTable">
      <thead class="thead-dark">
        <tr>
          <th>Name</th>
          <th>Club</th>
          <th>Age Category</th>
          <th>Weight Category</th>
          <th>Total Points</th>
          <th>Tournaments</th>
        </tr>
      </thead>
      <tbody>
        <!-- Filled dynamically with JS -->
      </tbody>
    </table>
  </div>
</div>

<script>
  const ageCategorySelect = document.getElementById('ageCategoryFilter');
  const tournamentSelect = document.getElementById('tournamentFilter');
  const withResultsCheckbox = document.getElementById('withResultsOnly');
  const tableBody = document.querySelector('#athletesTable tbody');

  let athletesData = [];

function fetchAthletes(ageCategoryId) {
  fetch(`/dashboard/age/${ageCategoryId || ''}`)
    .then(res => res.json())
    .then(data => {
      if(data.success) {
        // Sort athletes alphabetically by full_name
        athletesData = data.athletes.sort((a, b) => a.full_name.localeCompare(b.full_name));
        populateTournamentFilter();
        renderTable();
      }
    });
}

  function populateTournamentFilter() {
    const tournaments = new Set();
    athletesData.forEach(a => {
      a.tournaments.forEach(t => tournaments.add(t.name));
    });

    tournamentSelect.innerHTML = '<option value="">All</option>';
    tournaments.forEach(t => {
      const opt = document.createElement('option');
      opt.value = t;
      opt.textContent = t;
      tournamentSelect.appendChild(opt);
    });
  }

  function renderTable() {
    const selectedTournament = tournamentSelect.value;
    const withResults = withResultsCheckbox.checked;

    tableBody.innerHTML = '';
    athletesData.forEach(a => {
      let tournamentsToShow = a.tournaments;
      if(selectedTournament) {
        tournamentsToShow = tournamentsToShow.filter(t => t.name === selectedTournament);
      }
      if(withResults && tournamentsToShow.length === 0) return;

      const tournamentText = tournamentsToShow.map(t => {
        let badge = '';
        if(t.placement === 1) badge = '<span class="badge bg-success">1st</span> ';
        else if(t.placement === 2) badge = '<span class="badge bg-warning text-dark">2nd</span> ';
        else if(t.placement === 3) badge = '<span class="badge bg-info text-dark">3rd</span> ';
        return `${badge}${t.name} (${t.date}) P:${t.placement} W:${t.wins} Points:${t.points_earned}`;
      }).join('<br>');

      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${a.full_name}</td>
        <td>${a.club_name || '-'}</td>
        <td>${a.age_category || '-'}</td>
        <td>${a.weight_category || '-'}</td>
        <td>${a.total_points}</td>
        <td>${tournamentText || '-'}</td>
      `;
      tableBody.appendChild(row);
    });
  }

  ageCategorySelect.addEventListener('change', () => fetchAthletes(ageCategorySelect.value));
  tournamentSelect.addEventListener('change', renderTable);
  withResultsCheckbox.addEventListener('change', renderTable);

  // Initial load
  fetchAthletes();
</script>

