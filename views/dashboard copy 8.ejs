<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<div class="container mt-5 mb-5">

  <!-- Header -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="fw-bold text-primary mb-0">
      <i class="bi bi-trophy-fill"></i> Πίνακας Αθλητών
    </h1>
    <button class="btn btn-outline-primary btn-sm" id="refreshBtn">
      <i class="bi bi-arrow-clockwise"></i> Επαναφόρτωση
    </button>
  </div>

  <!-- Φίλτρα -->
  <div class="card shadow-sm mb-4 border-0">
    <div class="card-body">
      <div class="row g-3 align-items-end">

        <div class="col-md-3">
          <label class="form-label fw-semibold">Ηλικιακή Κατηγορία</label>
          <select id="ageCategoryFilter" class="form-select" multiple>
            <% ageCategories.forEach(cat => { %>
              <option value="<%= cat.id %>"><%= cat.name %></option>
            <% }) %>
          </select>
          <small class="text-muted">Κράτησε Ctrl / Cmd για πολλαπλή επιλογή</small>
        </div>

        <div class="col-md-3">
          <label class="form-label fw-semibold">Κατηγορία Βάρους</label>
          <select id="weightCategoryFilter" class="form-select">
            <option value="">Όλες</option>
          </select>
        </div>

        <div class="col-md-2">
          <label class="form-label fw-semibold">Φύλο</label>
          <select id="genderFilter" class="form-select">
            <option value="">Όλα</option>
            <option value="male">Άνδρες</option>
            <option value="female">Γυναίκες</option>
          </select>
        </div>

        <div class="col-md-2">
          <label class="form-label fw-semibold">Αγώνας</label>
          <select id="tournamentFilter" class="form-select">
            <option value="">Όλοι</option>
          </select>
        </div>

        <div class="col-md-2 d-flex align-items-center">
          <div class="form-check mt-4">
            <input class="form-check-input" type="checkbox" id="withResultsOnly">
            <label class="form-check-label fw-semibold" for="withResultsOnly">
              Μόνο με αποτελέσματα
            </label>
          </div>
        </div>

      </div>
    </div>
  </div>

  <!-- Πίνακας Αθλητών -->
  <div class="card shadow-sm border-0">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
      <h5 class="mb-0"><i class="bi bi-people-fill"></i> Επισκόπηση Αθλητών</h5>
      <span class="badge bg-light text-dark" id="athleteCount"></span>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped table-hover align-middle mb-0" id="athletesTable">
          <thead class="table-primary">
            <tr>
              <th style="width:50px;">#</th>
              <th>Όνομα</th>
              <th>Φύλο</th>
              <th>Σύλλογος</th>
              <th>Κατηγορία Βάρους</th>
              <th>Συνολικοί Πόντοι</th>
              <th>Αγώνες</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Λογική JavaScript -->
<script>
  const ageCategorySelect = document.getElementById('ageCategoryFilter');
  const weightCategorySelect = document.getElementById('weightCategoryFilter');
  const genderSelect = document.getElementById('genderFilter');
  const tournamentSelect = document.getElementById('tournamentFilter');
  const withResultsCheckbox = document.getElementById('withResultsOnly');
  const tableBody = document.querySelector('#athletesTable tbody');
  const athleteCount = document.getElementById('athleteCount');
  const refreshBtn = document.getElementById('refreshBtn');

  let athletesData = [];
  let allTournaments = [];

  async function fetchAthletes(ageCategoryIds) {
    if (!ageCategoryIds || ageCategoryIds.length === 0) ageCategoryIds = ['all'];

    const res = await fetch(`/dashboard/age-multiple/${ageCategoryIds.join(',')}`);
    const data = await res.json();

    if (data.success) {
      athletesData = (data.athletes || []).sort((a, b) => a.full_name.localeCompare(b.full_name));
      allTournaments = data.tournaments || [];
      populateTournamentFilter();
      populateWeightFilter();
      renderTable();
    }
  }

  function populateTournamentFilter() {
    tournamentSelect.innerHTML = '<option value="">Όλοι</option>';
    allTournaments.forEach(t => {
      const opt = document.createElement('option');
      opt.value = t.name;
      opt.textContent = `${t.name} (${t.date || 'χωρίς ημερομηνία'})`;
      tournamentSelect.appendChild(opt);
    });
  }

  function populateWeightFilter() {
    const uniqueWeights = [...new Set(athletesData.map(a => a.weight_category).filter(Boolean))].sort((a, b) => a.localeCompare(b));
    weightCategorySelect.innerHTML = '<option value="">Όλες</option>';
    uniqueWeights.forEach(w => {
      const opt = document.createElement('option');
      opt.value = w;
      opt.textContent = w;
      weightCategorySelect.appendChild(opt);
    });
  }

  function renderTable() {
    const selectedTournament = tournamentSelect.value;
    const selectedWeight = weightCategorySelect.value;
    const selectedGender = genderSelect.value;
    const withResults = withResultsCheckbox.checked;

    tableBody.innerHTML = '';
    let visibleCount = 0;

    athletesData.forEach(a => {
      if (selectedWeight && a.weight_category !== selectedWeight) return;
      if (selectedGender && a.gender?.toLowerCase() !== selectedGender) return;

      let tournamentsToShow = a.tournaments || [];
      if (selectedTournament) {
        tournamentsToShow = tournamentsToShow.filter(t => t.name === selectedTournament);
      }
      if (withResults && tournamentsToShow.length === 0) return;

      visibleCount++;

      const genderBadge =
        a.gender === 'male'
          ? '<span class="badge bg-primary">M</span>'
          : a.gender === 'female'
            ? '<span class="badge bg-pink text-white">F</span>'
            : '-';

      const tournamentText = tournamentsToShow.length > 0
        ? tournamentsToShow.map(t => {
            const badge =
              t.placement === 1 ? '<span class="badge bg-success">🥇 1η Θέση</span> ' :
              t.placement === 2 ? '<span class="badge bg-warning text-dark">🥈 2η Θέση</span> ' :
              t.placement === 3 ? '<span class="badge bg-info text-dark">🥉 3η Θέση</span> ' : '';
            return `${badge}<strong>${t.name}</strong><br>
                    <small class="text-muted">${t.date || ''} | Νίκες: ${t.wins || 0} | Πόντοι: ${t.points_earned || 0}</small>`;
          }).join('<hr class="my-1">')
        : '<span class="text-muted">Χωρίς αποτελέσματα</span>';

      const row = document.createElement('tr');
      row.innerHTML = `
        <td class="text-center fw-bold">${visibleCount}</td>
        <td><i class="bi bi-person-circle text-primary me-1"></i> ${a.full_name}</td>
        <td>${genderBadge}</td>
        <td>${a.club_name || '-'}</td>
        <td>${a.weight_category || '-'}</td>
        <td><span class="fw-bold text-primary">${a.total_points ?? 0}</span></td>
        <td>${tournamentText}</td>
      `;
      tableBody.appendChild(row);
    });

    athleteCount.textContent = `${visibleCount} αθλητ${visibleCount === 1 ? 'ής' : 'ές'}`;
  }

  // --- Listeners ---
  ageCategorySelect.addEventListener('change', () => {
    const selected = Array.from(ageCategorySelect.selectedOptions).map(opt => opt.value);
    fetchAthletes(selected);
  });
  weightCategorySelect.addEventListener('change', renderTable);
  genderSelect.addEventListener('change', renderTable);
  tournamentSelect.addEventListener('change', renderTable);
  withResultsCheckbox.addEventListener('change', renderTable);
  refreshBtn.addEventListener('click', () => fetchAthletes(Array.from(ageCategorySelect.selectedOptions).map(opt => opt.value)));

  // Αρχικό φόρτωμα
  fetchAthletes();
</script>

<style>
  .badge.bg-pink {
    background-color: #e83e8c;
  }
</style>
